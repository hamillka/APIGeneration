package <<PACKAGE>>.routes

import <<PACKAGE>>.models.*
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.request.*
import io.ktor.server.response.*
import io.ktor.server.routing.*

fun Route.<<CLASSNAME>>Routing() {
    route("/<<CLASSNAME>>") {
        get {
            if (<<CLASSNAME>>Storage.isNotEmpty()) {
                call.respond(<<CLASSNAME>>Storage)
            } else {
                call.respondText("No <<CLASSNAME>>s found", status = HttpStatusCode.OK)
            }
        }
        get("{id?}") {
            val id = call.parameters["id"] ?: return@get call.respondText(
                "Missing id",
                status = HttpStatusCode.BadRequest
            )
            val <<CLASSNAME>> =
                <<CLASSNAME>>Storage.find { it.id == id } ?: return@get call.respondText(
                    "No <<CLASSNAME>> with id $id",
                    status = HttpStatusCode.NotFound
                )
            call.respond(<<CLASSNAME>>)
        }
    }
}